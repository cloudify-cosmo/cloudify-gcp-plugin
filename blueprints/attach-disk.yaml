tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.1.0/types.yaml
  - plugin:cloudify-gcp-plugin
  - plugin:cloudify-utilities-plugin

inputs:

  zone:
    type: string

  region:
    type: string

  prefix:
    type: string

  network_name:
    type: string
    default: { concat: [ { get_input: prefix }, '-network' ] }

  subnetwork_name:
    type: string
    default: { concat: [ { get_input: prefix }, '-subnetwork' ] }

  network_subnet0_cidr:
    default: 10.11.12.0/22

  image_id:
    default: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20160803
    required: true

dsl_definitions:

  client_config: &gcp_config
    auth: { get_secret: gcp_credentials }
    zone: { get_input: zone }


node_templates:

  virtual_machine:
    type: cloudify.gcp.nodes.Instance
    properties:
      external_ip: true
      use_public_ip: true
      name: 'we-really-require-name-question'
      gcp_config: *gcp_config
      install_agent: false
    relationships:
    - type: cloudify.gcp.relationships.contained_in_network
      target: subnet
    - type: cloudify.relationships.connected_to
      target: boot_disk

  boot_disk:
    type: cloudify.gcp.nodes.Volume
    properties:
      image: { get_input: image_id }
      boot: true
      gcp_config: *gcp_config

  snapshot:
    type: cloudify.gcp.nodes.Snapshot
    properties:
      gcp_config: *gcp_config
    interfaces:
      cloudify.interfaces.snapshot:
        create:
          inputs:
            disk_name: { get_attribute: [boot_disk, name] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: boot_disk

  subnet:
    type: cloudify.gcp.nodes.SubNetwork
    properties:
      name: { get_input: subnetwork_name }
      region: { get_input: region }
      subnet: { get_input: network_subnet0_cidr }
      gcp_config: *gcp_config
    relationships:
      - type: cloudify.gcp.relationships.contained_in_network
        target: network

  network:
    type: cloudify.gcp.nodes.Network
    properties:
      name: { get_input: network_name }
      gcp_config: *gcp_config
      auto_subnets: false

outputs:
  ip:
    value: {get_attribute: [virtual_machine, ip]}
