tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
  - plugin.yaml

inputs:

  client_x509_cert_url:
    type: string
    default: { get_secret: client_x509_cert_url }

  client_email:
    type: string
    default: { get_secret: client_email }

  client_id:
    type: string
    default: { get_secret: client_id }

  project_id:
    type: string
    default: { get_secret: project_id }

  private_key_id:
    type: string
    default: { get_secret: private_key_id }

  private_key:
    type: string
    default: { get_secret: private_key }

  zone:
    type: string
    default: { get_secret: zone }

  region:
    type: string
    default: { get_secret: region }

  network_name:
    type: string
    default: 'boot-disk-network-0'
    # default: { get_secret: management_network_name }

  subnetwork_name:
    type: string
    default: 'boot-disk-subnetwork-0'
    # default: { get_secret: management_subnetwork_name }

  network_subnet0_cidr:
    default: 10.11.12.0/22

  image_id:
    default: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20160803
    required: true

dsl_definitions:

  - &gcp_config
    auth:
      type: service_account
      auth_uri: https://accounts.google.com/o/oauth2/auth
      token_uri: https://accounts.google.com/o/oauth2/token
      auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
      client_x509_cert_url: { get_input: client_x509_cert_url }
      client_email: { get_input: client_email }
      client_id: { get_input: client_id }
      project_id: { get_input: project_id }
      private_key_id: { get_input: private_key_id }
      private_key: { get_input: private_key }
    project: { get_input: project_id }
    zone: { get_input: zone }

node_templates:

  virtual_machine:
    type: cloudify.gcp.nodes.Instance
    properties:
      external_ip: true
      name: 'we-really-require-name-question'
      gcp_config: *gcp_config
      install_agent: false
    relationships:
    - type: cloudify.gcp.relationships.contained_in_network
      target: subnet
    - type: cloudify.relationships.connected_to
      target: boot_disk

  boot_disk:
    type: cloudify.gcp.nodes.Volume
    properties:
      image: { get_input: image_id }
      boot: true
      gcp_config: *gcp_config

  subnet:
    type: cloudify.gcp.nodes.SubNetwork
    properties:
      # use_external_resource: true
      name: { get_input: subnetwork_name }
      region: { get_input: region }
      subnet: { get_input: network_subnet0_cidr }
      gcp_config: *gcp_config
    relationships:
      - type: cloudify.gcp.relationships.contained_in_network
        target: network

  network:
    type: cloudify.gcp.nodes.Network
    properties:
      # use_external_resource: true
      name: { get_input: network_name }
      gcp_config: *gcp_config
      auto_subnets: false

outputs:
  ip:
    value: {get_attribute: [virtual_machine, ip]}
