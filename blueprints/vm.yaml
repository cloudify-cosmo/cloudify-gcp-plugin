tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://cloudify.co/spec/cloudify/4.5/types.yaml
  # - plugin:cloudify-gcp-plugin
  - plugin.yaml

inputs:

  network_name:
    type: string
    description: The name of your GCP Virtual Network.
    default: hellovnet

  subnet_name:
    type: string
    description: The name of your GCP Virtual Network.
    default: hellosubnet

  image:
    type: string
    description: A Ubuntu Trusty 14.04 image.
    default: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1404-trusty-v20170517

  instance_type:
    type: string
    description: A small GCP machine type.
    default: n1-standard-1

  gcp_client_x509_cert_url:
    type: string

  gcp_client_email:
    type: string

  gcp_client_id:
    type: string

  gcp_project_id:
    type: string

  gcp_private_key_id:
    type: string

  gcp_private_key:
    type: string

  gcp_zone:
    type: string

  gcp_region:
    type: string
    description: The GCP region to deploy the application in, such as europe-west1.


dsl_definitions:

  client_config: &gcp_config
    auth:
      type: service_account
      auth_uri: https://accounts.google.com/o/oauth2/auth
      token_uri: https://accounts.google.com/o/oauth2/token
      auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
      client_x509_cert_url: { get_input: gcp_client_x509_cert_url }
      client_email: { get_input: gcp_client_email }
      client_id: { get_input: gcp_client_id }
      project_id: { get_input: gcp_project_id }
      private_key_id: { get_input: gcp_private_key_id }
      private_key: { get_input: gcp_private_key }
    project: { get_input: gcp_project_id }
    zone: { get_input: gcp_zone }

node_templates:

  host:
    type: cloudify.gcp.nodes.Instance
    properties:
      gcp_config: *gcp_config
      agent_config:
        install_method: none
      image_id: { get_input: image }
      instance_type: { get_input: instance_type }
      zone: { get_input: gcp_zone }
      external_ip: true
    relationships:
    - type: cloudify.relationships.depends_on
      target: subnet

  firewall:
    type: cloudify.gcp.nodes.FirewallRule
    properties:
      gcp_config: *gcp_config
      allowed:
        tcp:
          - 80
      sources:
        - 0.0.0.0/0
    relationships:
      - type: cloudify.relationships.connected_to
        target: network

  subnet:
    type: cloudify.gcp.nodes.SubNetwork
    properties:
      name: { get_input: subnet_name }
      region: { get_input: gcp_region }
      subnet: 10.11.12.0/22
      gcp_config: *gcp_config
    relationships:
    - type: cloudify.gcp.relationships.contained_in_network
      target: network

  network:
    type: cloudify.gcp.nodes.Network
    properties:
      name: { get_input: network_name }
      auto_subnets: false
      gcp_config: *gcp_config
