tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://cloudify.co/spec/cloudify/4.5/types.yaml
  - plugin.yaml

inputs:

  client_x509_cert_url:
    type: string

  client_email:
    type: string

  client_id:
    type: string

  project_id:
    type: string

  private_key_id:
    type: string

  private_key:
    type: string

  zone:
    type: string

  region:
    type: string
    default: { get_secret: region }

  network_name:
    type: string
    default: { get_secret: management_network_name }
    # default: 'boot-disk-network-0'

  subnetwork_name:
    type: string
    default: { get_secret: management_subnetwork_name }
    # default: 'boot-disk-subnetwork-0'

dsl_definitions:

  - &gcp_config
    auth:
      type: service_account
      auth_uri: https://accounts.google.com/o/oauth2/auth
      token_uri: https://accounts.google.com/o/oauth2/token
      auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
      client_x509_cert_url: { get_input: client_x509_cert_url }
      client_email: { get_input: client_email }
      client_id: { get_input: client_id }
      project_id: { get_input: project_id }
      private_key_id: { get_input: private_key_id }
      private_key: { get_input: private_key }
    project: { get_input: project_id }
    zone: { get_input: zone }

node_templates:

  k8s_cluster:
    type: cloudify.gcp.nodes.KubernetesCluster
    properties:
      name: demo-eaas
      gcp_config: *gcp_config

  k8s_node_pool:
    type: cloudify.gcp.nodes.KubernetesNodePool
    properties:
      name: demo-eaas-node-pool-1
      cluster_id: { get_property: [ k8s_cluster, name] }
      additional_settings:
        config:
          machineType: n1-standard-2
        initialNodeCount: 2
        autoscaling:
          enabled: true
          minNodeCount: 2
          maxNodeCount: 3
      gcp_config: *gcp_config
    relationships:
    - type: cloudify.relationships.depends_on
      target: k8s_cluster
