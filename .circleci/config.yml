version: 2.1

orbs:
  node: cloudify/public-unittest-orb@1.0.2 #orb version
  wagonorb: cloudify/wagon-bulder-orb@1.0.3 #orb version

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:
  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-1604:201903-01

commands:

  merge_docs:
      steps:
        - attach_workspace:
            at: workspace
        - run:
            name: "Pull Submodules"
            command: |
              git submodule init
              git submodule update --remote --recursive
        - run:
            name: Download pip
            command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
        - run:
            name: Install pip
            command: sudo python get-pip.py
        - run:
            name: Install virtualenv
            command: pip install --user virtualenv
        - run:
            name: Init virtualenv
            command: virtualenv env
        - run:
            name: install tox
            command: pip install --user pygithub pyyaml==3.10
        - run:
            name: upgrade setuptools
            command: pip install --upgrade setuptools
        - run:
            name: install local project
            command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
        - attach_workspace:
            at: workspace
        - run: ecosystem-test merge-docs

  release_plugin:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote --recursive
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: sudo python get-pip.py
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: install tox
          command: pip install --user pygithub pyyaml==3.10
      - run:
          name: upgrade setuptools
          command: pip install --upgrade setuptools
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - attach_workspace:
          at: workspace
      - run: ecosystem-tests package-release --name cloudify-gcp-plugin

  create_manager_container_py3:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive --remote
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip===20.3.3
      - run:
          name: install cloudify
          command: |
            pip install -r test-requirements.txt
      - run:
          name: download manager docker image
          command:  wget http://repository.cloudifysource.org/cloudify/6.2.0/ga-release/cloudify-manager-aio-docker-6.2.0-ga.tar
      - run:
          name: load docker manager image
          command: docker load -i cloudify-manager-aio-docker-6.2.0-ga.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudify-manager-aio-x86_64
      - run:
          name: wait for starter
          command: docker exec -it cfy_manager cfy_manager wait-for-starter
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip

  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-test-manager -l $TEST_LICENSE -es gcp_credentials=$gcp_credentials -es region=$region -es zone=$zone -es ssl_cert=$ssl_cert -es ssl_key=$ssl_key  --bundle-path workspace/build/cloudify-plugins-bundle.tgz

  run_virtual_machine_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/virtual-machine/gcp.yaml --test-id=virtual-machine --on-failure=uninstall-force --timeout=1800

  run_gke_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/kubernetes/gcp-gke/blueprint.yaml --test-id=gcp-gke  -i resource_prefix=gcpresource-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  # test blueprints
  run_attach_disk_test:
     steps:
       - run: ecosystem-test local-blueprint-test  -b blueprints/attach-disk.yaml --test-id=gcp-attach-disk -i prefix=gcp-attach-disk-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_container_engine_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b blueprints/container-engine.yaml --test-id=gcp-container-engine -i prefix=gcp-container-engine-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_http_balancer_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b blueprints/http-balancer.yaml --test-id=gcp-http-balancer -i prefix=gcp-http-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_https_balancer_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b blueprints/https-balancer.yaml --test-id=gcp-https-balancer -i prefix=gcp-https-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_ssl_balancer_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b blueprints/ssl-balancer.yaml --test-id=gcp-ssl-balancer -i prefix=gcp-ssl-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_tcp_balancer_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b blueprints/tcp-balancer.yaml --test-id=gcp-tcp-balancer -i prefix=gcp-tcp-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_gcp_example_network_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/gcp-example-network/blueprint.yaml --test-id=gcp-example-network-test  -i resource_prefix=gcp-example-network-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000
  # cloudify-community/blueprint-examples/gcp-example-network/blueprint.yaml

jobs:
  virtual_machine_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_py3
      - prepare_test_manager
      - run_virtual_machine_test

  gke_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_py3
      - prepare_test_manager
      - run_gke_test

  release:
    executor: py36
    steps:
      - checkout
      - release_plugin

  merge_docs:
    executor: py36
    steps:
      - checkout
      - merge_docs

  attach_disk_and_container_engine_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_py3
      - prepare_test_manager
      - run_attach_disk_test
      - run_container_engine_test

  http_balancer_and_https_balancer_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_py3
      - prepare_test_manager
      - run_http_balancer_test
      - run_https_balancer_test

  ssl_balancer_and_tcp_balancer_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_py3
      - prepare_test_manager
      - run_ssl_balancer_test
      - run_tcp_balancer_test

  gcp_example_network_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_py3
      - prepare_test_manager
      - run_gcp_example_network_test


workflows:
  version: 2.1
  tests:
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon

      - virtual_machine_integration_tests_py3:
          requires:
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - gke_integration_tests_py3:
          requires:
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - release:
          filters:
            branches:
              only: /master/
          requires:
            - node/unittests_job
            - wagonorb/arch64_wagon
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - virtual_machine_integration_tests_py3
            - gke_integration_tests_py3
      - merge_docs:
          filters:
            branches:
              only: /master/
          requires:
            - release
            - node/validate_documentation_job

  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,2,4,6"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
      - virtual_machine_integration_tests_py3:
          requires:
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - gke_integration_tests_py3:
          requires:
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

  run_test_only_on_sunday:
      triggers:
      - schedule:
          cron: "0 3 * * 0"
          filters:
            branches:
              only:
                - master
      jobs:
        - node/check_py3_compat_job
        - node/unittests_job
        - node/validate_version_job
        - wagonorb/rhel_wagon:
            filters:
              branches:
                only: /([0-9\.]*\-build|master|dev)/
        - wagonorb/wagon:
            filters:
              branches:
                only: /([0-9\.]*\-build|master|dev)/
        - wagonorb/arch64_wagon:
            filters:
              branches:
                only: /([0-9\.]*\-build|master|dev)/
        - wagonorb/build_bundle:
            filters:
              branches:
                only: /master/
            requires:
              - wagonorb/wagon
              - wagonorb/rhel_wagon
              - wagonorb/arch64_wagon
        - attach_disk_and_container_engine_test_py3:
            requires:
              - wagonorb/build_bundle
              - wagonorb/wagon
              - wagonorb/rhel_wagon
              - wagonorb/arch64_wagon
            filters:
              branches:
                only: /([0-9\.]*\-build|master|dev)/


  run_test_only_on_monday:
    triggers:
      - schedule:
          cron: "0 3 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
      - http_balancer_and_https_balancer_test_py3:
          requires:
            - wagonorb/build_bundle
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/


  run_test_only_on_tuesday:
    triggers:
      - schedule:
          cron: "0 3 * * 2"
          filters:
            branches:
              only:
                - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
      - ssl_balancer_and_tcp_balancer_test_py3:
          requires:
            - wagonorb/build_bundle
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/


  run_test_only_on_wednesday:
    triggers:
      - schedule:
          cron: "0 3 * * 3"
          filters:
            branches:
              only:
                - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
      - gcp_example_network_test_py3:
          requires:
            - wagonorb/build_bundle
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
