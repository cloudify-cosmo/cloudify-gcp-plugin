version: 2.1

unittest-post-steps: &unittest-post-steps
  post-steps:
    - store_test_results:
        path: /home/circleci/project/nosetests.xml
    - store_artifacts:
        path: /home/circleci/project/coverage.xml
        prefix: tests
    - slack/notify_failed

orbs:
  slack: cloudify/notify-slack@2
  node: cloudify/public-unittest-orb@volatile
  wagonorb: cloudify/wagon-bulder-orb@volatile
  releaseorb: cloudify/release-orb@volatile
  managerorb: cloudify/manager-orb@volatile

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:
  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
       image: ubuntu-2004:202201-02

commands:

  setup_manager:
    steps:
      - run: |
          if [[ -z "${CLOUDIFY_HOST}" ]]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TENANT}" ]]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TOKEN}" ]]; then
              exit 1
          fi
      - run: |
          response=$(curl --write-out '%{http_code}' --silent --insecure --header "Tenant: ${CLOUDIFY_TENANT}" --header "Authentication-Token: ${CLOUDIFY_TOKEN}" https://$CLOUDIFY_HOST/api/v3.1/status --output /dev/null)
          if [[ $response != 200 ]]; then
              echo "Failed to get manager status";
              exit 1
          fi
      - run: pip3 install urllib3==1.26.15 requests-toolbelt==0.10.1
      - run: pip3 install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/refs/heads/master.zip
      - run: git submodule update --init --recursive --remote

  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-remote-test-manager -es gcp_credentials=$gcp_credentials -s region=us-east1 -s zone=us-east1-b -es ssl_cert=$ssl_cert -es ssl_key=$ssl_key -p $(find ~/project/workspace/build/ -name *manylinux-py311-none-linux_x86_64.wgn*)  ~/project/plugin_1_5.yaml
      - run: ecosystem-test remote-upload-plugin -PN utilities
      - run: ecosystem-test remote-upload-plugin -PN ansible
      - run: ecosystem-test remote-upload-plugin -PN kubernetes

  run_virtual_machine_test:
    steps:
      - run: ecosystem-test remote-blueprint-test  -b examples/blueprint-examples/virtual-machine/gcp.yaml --test-id=virtual-machine-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=1800 | tee -a run_virtual_machine_test.log
      - store_artifacts:
          path: run_virtual_machine_test.log
      - slack/notify_failed

  run_gke_test:
    steps:
      - run: 
          name: run_gke_test
          no_output_timeout: 90m
          command: ecosystem-test remote-blueprint-test  -b examples/blueprint-examples/kubernetes/gcp-gke/blueprint.yaml --test-id=gcp-gke-$CIRCLE_BUILD_NUM  -i resource_prefix=gcpresource-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_gke_test.log
      - store_artifacts:
          path: run_gke_test.log
      - slack/notify_failed

  # test blueprints
  run_attach_disk_test:
     steps:
        - run: ecosystem-test remote-blueprint-test  -b blueprints/attach-disk.yaml --test-id=gcp-attach-disk-$CIRCLE_BUILD_NUM  -i zone=europe-west1-b -i region=europe-west1 -i prefix=gcp-attach-disk-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_attach_disk_test.log
        - store_artifacts:
            path: run_attach_disk_test.log
        - slack/notify_failed

  run_container_engine_test:
    steps:
      - run: ecosystem-test remote-blueprint-test  -b blueprints/container-engine.yaml --test-id=gcp-container-engine-$CIRCLE_BUILD_NUM -i prefix=gcp-container-engine-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_container_engine_test.log
      - store_artifacts:
          path: run_container_engine_test.log
      - slack/notify_failed

  run_http_balancer_test:
    steps:
      - run: ecosystem-test remote-blueprint-test  -b blueprints/http-balancer.yaml --test-id=gcp-http-balancer-$CIRCLE_BUILD_NUM -i prefix=gcp-http-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_http_balancer_test.log
      - store_artifacts:
          path: run_http_balancer_test.log
      - slack/notify_failed

  run_https_balancer_test:
    steps:
      - run: ecosystem-test remote-blueprint-test  -b blueprints/https-balancer.yaml --test-id=gcp-https-balancer-$CIRCLE_BUILD_NUM -i prefix=gcp-https-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_https_balancer_test.log
      - store_artifacts:
          path: run_https_balancer_test.log
      - slack/notify_failed

  run_ssl_balancer_test:
    steps:
      - run: ecosystem-test remote-blueprint-test  -b blueprints/ssl-balancer.yaml --test-id=gcp-ssl-balancer-$CIRCLE_BUILD_NUM -i prefix=gcp-ssl-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_ssl_balancer_test.log
      - store_artifacts:
          path: run_ssl_balancer_test.log
      - slack/notify_failed

  run_tcp_balancer_test:
    steps:
      - run: ecosystem-test remote-blueprint-test  -b blueprints/tcp-balancer.yaml --test-id=gcp-tcp-balancer-$CIRCLE_BUILD_NUM -i prefix=gcp-tcp-balancer-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_tcp_balancer_test.log
      - store_artifacts:
          path: run_tcp_balancer_test.log
      - slack/notify_failed

  run_gcp_example_network_test:
    steps:
      - run: ecosystem-test remote-blueprint-test  -b examples/blueprint-examples/gcp-example-network/blueprint.yaml --test-id=gcp-example-network-test-$CIRCLE_BUILD_NUM  -i resource_prefix=gcp-example-network-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000 | tee -a run_gcp_example_network_test.log
      - store_artifacts:
          path: run_gcp_example_network_test.log
      - slack/notify_failed
  # cloudify-community/blueprint-examples/gcp-example-network/blueprint.yaml

jobs:
  virtual_machine_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_virtual_machine_test

  gke_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_gke_test

  attach_disk_and_container_engine_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_attach_disk_test
      - run_container_engine_test

  http_balancer_and_https_balancer_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_http_balancer_test
      - run_https_balancer_test

  ssl_balancer_and_tcp_balancer_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_ssl_balancer_test
      - run_tcp_balancer_test

  gcp_example_network_test_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_gcp_example_network_test

workflows:
  version: 2.1
  tests:
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - virtual_machine_integration_tests_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - gke_integration_tests_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - releaseorb/release:
          context: 
            - plugins-inputs
          filters:
            branches:
              only: /master/
          requires:
            - node/unittests_job
            - wagonorb/arch64_wagon
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/wagon_311
            - virtual_machine_integration_tests_py3
            - gke_integration_tests_py3
      - releaseorb/merge_docs_job:
          context: 
            - plugins-inputs
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job

  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,2,4,6"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - virtual_machine_integration_tests_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - gke_integration_tests_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

  run_test_only_on_sunday:
    triggers:
    - schedule:
        cron: "0 3 * * 0"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
          - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - attach_disk_and_container_engine_test_py3:
          context: 
          - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/


  run_test_only_on_monday:
    triggers:
      - schedule:
          cron: "0 3 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - http_balancer_and_https_balancer_test_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/


  run_test_only_on_tuesday:
    triggers:
      - schedule:
          cron: "0 3 * * 2"
          filters:
            branches:
              only:
                - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - ssl_balancer_and_tcp_balancer_test_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/


  run_test_only_on_wednesday:
    triggers:
      - schedule:
          cron: "0 3 * * 3"
          filters:
            branches:
              only:
                - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - gcp_example_network_test_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
            - wagonorb/wagon_311
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
