diff --git a/cloudify_gcp/compute/tests/test_instance.py b/cloudify_gcp/compute/tests/test_instance.py
index 80096e8..c025ac7 100644
--- a/cloudify_gcp/compute/tests/test_instance.py
+++ b/cloudify_gcp/compute/tests/test_instance.py
@@ -532,24 +532,18 @@ class TestGCPInstance(TestGCP):
                 self.ctxmock.instance.runtime_properties['ip'],
                 'a')
 
-    def test_resize(self, mock_getitem, mock_build, *args):
-        self.ctxmock.instance.runtime_properties['zone'] = 'zone'
-        self.ctxmock.instance.runtime_properties['name'] = 'name'
-        self.ctxmock.instance.runtime_properties['machine_type'] = \
-            'n1-standard-2'
-        print('**1 {}'.format(self.ctxmock.instance.runtime_properties))
-
-        instance.resize('name', 'zone', 'e2-standard-2')
-        print('**2 {}'.format(self.ctxmock.instance.runtime_properties))
-
-        self.assertEqual(
-                {
-                    'zone': 'zone',
-                    'machine_type': 'e2-standard-2',
-                    'name': 'name'
-                    },
-                self.ctxmock.instance.runtime_properties
-                )
+    def test_resize(self, mock_build, *args):
+        instance.resize('foo', 'bar', 'baz')
+        mock_build.assert_called_once()
+        mock_build().instances().stop.assert_called_with(
+                project='not really a project',
+                instance='foo',
+                zone='bar')
+        mock_build().instances().setMachineType.assert_called_with(
+                project='not really a project',
+                instance='foo',
+                zone='bar',
+                body={'machineType': 'bar/machineTypes/baz'})
 
     @patch('cloudify_gcp.utils.get_item_from_gcp_response', return_value={
         'networkInterfaces': [
diff --git a/cloudify_gcp/tests/__init__.py b/cloudify_gcp/tests/__init__.py
index 3c6fd69..38ff1ac 100644
--- a/cloudify_gcp/tests/__init__.py
+++ b/cloudify_gcp/tests/__init__.py
@@ -41,6 +41,7 @@ def ctx_mock():
         }
     ctx.instance.runtime_properties = DirtyTrackingDict()
     ctx.instance.relationships = []
+    ctx.plugin.properties = {}
     return ctx
 
 
diff --git a/cloudify_gcp/utils.py b/cloudify_gcp/utils.py
index 0f357a3..a61bb9f 100644
--- a/cloudify_gcp/utils.py
+++ b/cloudify_gcp/utils.py
@@ -426,10 +426,13 @@ def get_gcp_config(node=None, requested_zone=None):
             'No valid client configuration key was found in node or '
             'source node properties. Valid keys: [client_config]')
 
+    gcp_config = {}
+    gcp_config.update(getattr(ctx.plugin, 'properties', {}))
     gcp_config_from_properties = _get_gcp_config_from_properties()
     if gcp_config_from_properties:
-        gcp_config = gcp_config_from_properties
-    else:
+        gcp_config.update(gcp_config_from_properties)
+
+    if not gcp_config:
         try:
             with open(expanduser(constants.GCP_DEFAULT_CONFIG_PATH)) as f:
                 gcp_config = yaml.load(f)
diff --git a/cloudify_gcp/workflows/tests/test_discover.py b/cloudify_gcp/workflows/tests/test_discover.py
index 96bed2c..4536de7 100644
--- a/cloudify_gcp/workflows/tests/test_discover.py
+++ b/cloudify_gcp/workflows/tests/test_discover.py
@@ -3,6 +3,7 @@ from mock import patch, call, MagicMock
 
 from ..._compat import PY2
 from .. import resources, discover
+from cloudify.state import current_ctx
 
 
 @patch('cloudify_gcp.gcp.ServiceAccountCredentials.from_json_keyfile_dict')
@@ -53,6 +54,8 @@ class GCPeWorkflowTests(TestCase):
         node_instances = [node_instance]
         node.instances = node_instances
         mock_ctx.get_node.return_value = node
+        mock_ctx.plugin = MagicMock(properties={})
+        current_ctx.set(mock_ctx)
         params = {
             'node_id': 'foo',
             'resource_types': ['bar', 'baz'],
@@ -66,6 +69,8 @@ class GCPeWorkflowTests(TestCase):
         mock_rest_client = self.get_mock_rest_client()
         get_rest_client.return_value = mock_rest_client
         mock_ctx = MagicMock()
+        mock_ctx.plugin = MagicMock(properties={})
+        current_ctx.set(mock_ctx)
         params = {
             'group_id': 'foo',
             'blueprint_id': 'bar',
@@ -87,6 +92,8 @@ class GCPeWorkflowTests(TestCase):
         mock_ctx = MagicMock()
         mock_ctx.deployment = MagicMock(id='foo')
         mock_ctx.blueprint = MagicMock(id='bar')
+        mock_ctx.plugin = MagicMock(properties={})
+        current_ctx.set(mock_ctx)
         params = {
             'node_id': 'foo',
             'resource_types': ['bar', 'baz'],
@@ -155,6 +162,8 @@ class GCPeWorkflowTests(TestCase):
         node.instances = node_instances
         mock_ctx.get_node.return_value = node
         mock_ctx.logger = MagicMock()
+        mock_ctx.plugin = MagicMock(properties={})
+        current_ctx.set(mock_ctx)
         params = {
             'node': node,
             'zones': ['region1', 'region2'],
@@ -176,6 +185,8 @@ class GCPeWorkflowTests(TestCase):
             }
         )
         mock_ctx.instance = MagicMock(runtime_properties={'resources': {}})
+        mock_ctx.plugin = MagicMock(properties={})
+        current_ctx.set(mock_ctx)
         params = {
             'resource_config': {'resource_types': [
                 'projects.zones.clusters']},
