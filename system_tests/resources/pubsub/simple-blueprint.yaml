tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://cloudify.co/spec/cloudify/4.5/types.yaml
  - ../../../plugin.yaml


inputs:

  client_x509_cert_url:
    type: string
    default: { get_secret: client_x509_cert_url }

  client_email:
    type: string
    default: { get_secret: client_email }

  client_id:
    type: string
    default: { get_secret: client_id }

  project_id:
    type: string
    default: { get_secret: project_id }

  private_key_id:
    type: string
    default: { get_secret: private_key_id }

  private_key:
    type: string
    default: { get_secret: private_key }

  zone:
    type: string
    default: { get_secret: zone }

  region:
    type: string
    default: { get_secret: region }

  resource_prefix:
    type: string
    default: ex

  gcp_topic_policy_user:
    type: string


dsl_definitions:

  - &gcp_config
    auth:
      type: service_account
      auth_uri: https://accounts.google.com/o/oauth2/auth
      token_uri: https://accounts.google.com/o/oauth2/token
      auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
      client_x509_cert_url: { get_input: client_x509_cert_url }
      client_email: { get_input: client_email }
      client_id: { get_input: client_id }
      project_id: { get_input: project_id }
      private_key_id: { get_input: private_key_id }
      private_key: { get_input: private_key }
    project: { get_input: project_id }
    zone: { get_input: zone }

node_templates:

  gcp_topic_message:
    type: cloudify.gcp.nodes.TopicMessage
    properties:
      gcp_config: *gcp_config
      topic: { get_property: [ gcp_topic, name ] }
      messages:
        - data: "topic-message-1"
          attributes:
            key-attr-1: "topic-1-attr-1"
            key-attr-2: "topic-1-attr-2"

        - data: "topic-message-2"
          attributes:
            key-attr-1: "topic-1-attr-1"
            key-attr-2: "topic-1-attr-2"

    relationships:
      - type: cloudify.relationships.depends_on
        target: gcp_subscription

  gcp_topic_policy:
    type: cloudify.gcp.nodes.TopicPolicy
    properties:
      gcp_config: *gcp_config
      topic: { get_property: [ gcp_topic, name ] }
      policy:
        bindings:
          - role: "roles/viewer"
            members:
              - user: { get_input: gcp_topic_policy_user }

    relationships:
      - type: cloudify.relationships.depends_on
        target: gcp_topic

  gcp_subscription_policy:
    type: cloudify.gcp.nodes.SubscriptionPolicy
    properties:
      gcp_config: *gcp_config
      subscription: { get_property: [ gcp_subscription, name ] }
      policy:
        bindings:
          - role: "roles/viewer"
            members:
              - user: { get_input: gcp_topic_policy_user }

    relationships:
      - type: cloudify.relationships.depends_on
        target: gcp_subscription

  gcp_subscription:
    type: cloudify.gcp.nodes.Subscription
    properties:
      gcp_config: *gcp_config
      topic: 'topic-1'
      name: 'subscription-1'
      ack_deadline_seconds: 10

    relationships:
      - type: cloudify.gcp.relationships.subscription_connected_to_topic
        target: gcp_topic

  gcp_topic_message_acknowledge:
    type: cloudify.gcp.nodes.Acknowledge
    properties:
      gcp_config: *gcp_config
      subscription: { get_property: [ gcp_subscription, name ] }
      ack_ids: { get_attribute: [gcp_pull_request, ack_ids] }

    relationships:
      - type: cloudify.relationships.depends_on
        target: gcp_subscription
      - type: cloudify.relationships.depends_on
        target: gcp_topic_message
      - type: cloudify.relationships.depends_on
        target: gcp_pull_request

  gcp_pull_request:
    type: cloudify.gcp.nodes.PullRequest
    properties:
      gcp_config: *gcp_config
      subscription: { get_property: [ gcp_subscription, name ] }
      return_immediately: False
      max_messages: 2

    relationships:
      - type: cloudify.relationships.depends_on
        target: gcp_subscription
      - type: cloudify.relationships.depends_on
        target: gcp_topic_message

  gcp_topic:
    type: cloudify.gcp.nodes.Topic
    properties:
      gcp_config: *gcp_config
      name: 'topic-1'
