tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - ../../../plugin.yaml


inputs:

  prefix:
    description: prefix for names in this test blueprint

  image:
    default: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20160921

  project:
  gcp_auth:
  zone:

  network:
  subnet_1_name:
  subnet_2_name:


dsl_definitions:
  - &gcp_config
    auth: {get_input: gcp_auth}
    project: {get_input: project}
    network: {get_input: network}
    zone: {get_input: zone}


node_templates:

  network:
    type: cloudify.gcp.nodes.Network
    properties:
      use_external_resource: true
      name: {get_input: network}
      gcp_config: *gcp_config

  subnet_1:
    type: cloudify.gcp.nodes.SubNetwork
    properties:
      use_external_resource: true
      name: {get_input: subnet_1_name}
      region: us-east1
      gcp_config: *gcp_config
    relationships:
      - type: cloudify.gcp.relationships.contained_in_network
        target: network

  subnet_2:
    type: cloudify.gcp.nodes.SubNetwork
    properties:
      use_external_resource: true
      name: {get_input: subnet_2_name}
      region: us-east1
      gcp_config: *gcp_config
    relationships:
      - type: cloudify.gcp.relationships.contained_in_network
        target: network

  instance_1:
    type: cloudify.gcp.nodes.Instance
    properties:
      name: {concat: [get_input: prefix, -, instance-1]}
      image_id: {get_input: image}
      install_agent: false
      gcp_config: *gcp_config
    relationships:
      - type: cloudify.gcp.relationships.contained_in_network
        target: subnet_1

  instance_2:
    type: cloudify.gcp.nodes.Instance
    properties:
      name: {concat: [get_input: prefix, -, instance-2]}
      image_id: {get_input: image}
      install_agent: false
      gcp_config: *gcp_config
    relationships:
      - type: cloudify.gcp.relationships.contained_in_network
        target: subnet_2


outputs:

  subnet_1_name:
    value: {get_attribute: [subnet_1, name]}
  subnet_1_url:
    value: {get_attribute: [subnet_1, selfLink]}

  instance_1_subnet_url:
    value: {get_attribute: [instance_1, networkInterfaces, 0, subnetwork]}

  subnet_2_name:
    value: {get_attribute: [subnet_2, name]}
  subnet_2_url:
    value: {get_attribute: [subnet_2, selfLink]}

  instance_2_subnet_url:
    value: {get_attribute: [instance_2, networkInterfaces, 0, subnetwork]}

